{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","showAlert","split","map","c","join","document","getElementById","select","navigator","clipboard","writeText","length","prototypes","PropTypes","string","isRequired","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.efe82b14.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n             ///// <a className=\"nav-link\" href=\"/about\">\r\n                {props.aboutText}\r\n              </a>\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>/// use this while using react route\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              // eslint-disable-next-line\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.prototypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase!!\", \"success\");\r\n  };\r\n\r\n  const handleLoClick = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase!!\", \"success\");\r\n  };\r\n\r\n  const handleInvertClick = () => {\r\n    let newText = text\r\n      .split(\"\")\r\n      .map((c) => (c === c.toUpperCase() ? c.toLowerCase() : c.toUpperCase()))\r\n      .join(\"\");\r\n    setText(newText);\r\n    props.showAlert(\"All case are Inverted !!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text is copied to clipboard!!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces are removed!!\", \"success\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text area clear !!\", \"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter Text Here\");\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"grey\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n          Covert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>\r\n          Covert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleInvertClick}>\r\n          Invertcases\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>\r\n          Remove Extra Space\r\n        </button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} words, {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h3>Preview</h3>\r\n        <p>\r\n          {text.length > 0\r\n            ? text\r\n            : \"Enter something in text box above to preview it here\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Routes, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"grey\";\n      showAlert(\"Dark mode Activated\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode Activated\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        aboutText=\"About Us\"\n        mode={mode}\n        toggleMode={toggleMode}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Routes>\n            <Route path=\"/about\" element={<About />} />\n            <Route\n              path=\"/\"\n              element={ */}\n        <TextForm\n          showAlert={showAlert}\n          heading=\"Enter The Text To analyze\"\n          mode={mode}\n        />\n        {/* } */}\n        {/* /> */}\n        {/* </Routes> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}